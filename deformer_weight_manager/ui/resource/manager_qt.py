# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'D:\MyWork\deformer_weight_manager\ui\resource\designer\manager_qt.ui'
#
# Created: Fri Jan 26 00:32:09 2018
#      by: pyside-uic 0.2.15 running on PySide 1.2.4
#
# WARNING! All changes made in this file will be lost!

try:
    from PySide2.QtCore import *
    from PySide2.QtGui import *
    from PySide2.QtWidgets import *
    from shiboken2 import wrapInstance
except ImportError:
    from PySide.QtCore import *
    from PySide.QtGui import *
    from shiboken import wrapInstance


class Ui_deformer_manager_window(object):
    def setupUi(self, deformer_manager_window):
        deformer_manager_window.setObjectName("deformer_manager_window")
        deformer_manager_window.resize(600, 500)
        deformer_manager_window.setMinimumSize(QSize(600, 500))
        deformer_manager_window.setWindowTitle("Deformer Weight Manager")
        deformer_manager_window.setStyleSheet("font: 75 10pt \"Arial\";")
        self.central_widget = QWidget(deformer_manager_window)

        self.central_widget.setObjectName("central_widget")
        self.central_widget_horizontal_layout = QHBoxLayout(self.central_widget)
        self.central_widget_horizontal_layout.setSpacing(5)
        self.central_widget_horizontal_layout.setContentsMargins(5, 5, 5, 5)
        self.central_widget_horizontal_layout.setObjectName("central_widget_horizontal_layout")
        self.from_to_mesh_vertical_layout = QVBoxLayout()
        self.from_to_mesh_vertical_layout.setSpacing(5)
        self.from_to_mesh_vertical_layout.setObjectName("from_to_mesh_vertical_layout")
        self.from_group = QGroupBox("From", self.central_widget)
        self.from_group.setObjectName("from_group")
        self.from_group_vertical_layout = QVBoxLayout(self.from_group)
        self.from_group_vertical_layout.setSpacing(5)
        self.from_group_vertical_layout.setContentsMargins(5, 5, 5, 5)
        self.from_group_vertical_layout.setObjectName("from_group_vertical_layout")
        self.from_horizontal_a_layout = QHBoxLayout()
        self.from_horizontal_a_layout.setObjectName("from_horizontal_a_layout")
        self.soft_radio = QRadioButton("Soft Selection", self.from_group)
        self.soft_radio.setMinimumSize(QSize(130, 30))
        # icon = QIcon()
        # icon.addPixmap(QPixmap("../icon/softMod.png"), QIcon.Normal, QIcon.Off)
        # self.soft_radio.setIcon(icon)
        self.soft_radio.setObjectName("soft_radio")
        self.from_horizontal_a_layout.addWidget(self.soft_radio)
        self.blend_radio = QRadioButton("Blend Shape", self.from_group)
        self.blend_radio.setMinimumSize(QSize(130, 30))
        # icon1 = QIcon()
        # icon1.addPixmap(QPixmap("../icon/blendShape.png"), QIcon.Normal, QIcon.Off)
        # self.blend_radio.setIcon(icon1)
        self.blend_radio.setObjectName("blend_radio")
        self.from_horizontal_a_layout.addWidget(self.blend_radio)
        self.wire_radio = QRadioButton("Wire", self.from_group)
        self.wire_radio.setMinimumSize(QSize(130, 30))
        # icon2 = QIcon()
        # icon2.addPixmap(QPixmap("../icon/wire.png"), QIcon.Normal, QIcon.Off)
        # self.wire_radio.setIcon(icon2)
        self.wire_radio.setObjectName("wire_radio")
        self.from_horizontal_a_layout.addWidget(self.wire_radio)
        self.from_group_vertical_layout.addLayout(self.from_horizontal_a_layout)
        self.from_horizontal_b_layout = QHBoxLayout()
        self.from_horizontal_b_layout.setObjectName("from_horizontal_b_layout")
        self.lattice_radio = QRadioButton("Lattice", self.from_group)
        self.lattice_radio.setMinimumSize(QSize(130, 30))
        # icon3 = QIcon()
        # icon3.addPixmap(QPixmap("../icon/lattice.png"), QIcon.Normal, QIcon.Off)
        # self.lattice_radio.setIcon(icon3)
        self.lattice_radio.setObjectName("lattice_radio")
        self.from_horizontal_b_layout.addWidget(self.lattice_radio)
        self.cluster_radio = QRadioButton("Cluster", self.from_group)
        self.cluster_radio.setMinimumSize(QSize(130, 30))
        # icon4 = QIcon()
        # icon4.addPixmap(QPixmap("../icon/cluster.png"), QIcon.Normal, QIcon.Off)
        # self.cluster_radio.setIcon(icon4)
        self.cluster_radio.setObjectName("cluster_radio")
        self.from_horizontal_b_layout.addWidget(self.cluster_radio)
        self.skin_radio = QRadioButton("Skin Cluster", self.from_group)
        self.skin_radio.setMinimumSize(QSize(130, 30))
        # icon5 = QIcon()
        # icon5.addPixmap(QPixmap("../icon/skinCluster.png"), QIcon.Normal, QIcon.Off)
        # self.skin_radio.setIcon(icon5)
        self.skin_radio.setObjectName("skin_radio")
        self.from_horizontal_b_layout.addWidget(self.skin_radio)
        self.from_group_vertical_layout.addLayout(self.from_horizontal_b_layout)
        self.from_to_mesh_vertical_layout.addWidget(self.from_group)
        self.to_group = QGroupBox("To", self.central_widget)
        self.to_group.setObjectName("to_group")
        self.to_group_horizontal_layout = QHBoxLayout(self.to_group)
        self.to_group_horizontal_layout.setSpacing(5)
        self.to_group_horizontal_layout.setContentsMargins(5, 5, 5, 5)
        self.to_group_horizontal_layout.setObjectName("to_group_horizontal_layout")
        self.to_cluster_radio = QRadioButton("Cluster", self.to_group)
        self.to_cluster_radio.setMinimumSize(QSize(0, 30))
        # self.to_cluster_radio.setIcon(icon4)
        self.to_cluster_radio.setObjectName("to_cluster_radio")
        self.to_group_horizontal_layout.addWidget(self.to_cluster_radio)
        self.to_skin_radio = QRadioButton("Skin Cluster", self.to_group)
        self.to_skin_radio.setMinimumSize(QSize(0, 30))
        # self.to_skin_radio.setIcon(icon5)
        self.to_skin_radio.setObjectName("to_skin_radio")
        self.to_group_horizontal_layout.addWidget(self.to_skin_radio)
        self.from_to_mesh_vertical_layout.addWidget(self.to_group)
        self.source_target_horizontal_layout = QHBoxLayout()
        self.source_target_horizontal_layout.setSpacing(2)
        self.source_target_horizontal_layout.setObjectName("source_target_horizontal_layout")
        self.source_group = QGroupBox("Source Mesh", self.central_widget)
        self.source_group.setObjectName("source_group")
        self.source_group_vertical_layout = QVBoxLayout(self.source_group)
        self.source_group_vertical_layout.setSpacing(2)
        self.source_group_vertical_layout.setContentsMargins(2, 2, 2, 2)
        self.source_group_vertical_layout.setObjectName("source_group_vertical_layout")
        self.source_horizontal_layout = QHBoxLayout()
        self.source_horizontal_layout.setSpacing(0)
        self.source_horizontal_layout.setObjectName("source_horizontal_layout")
        self.source_line = QLineEdit(self.source_group)
        self.source_line.setMinimumSize(QSize(0, 30))
        self.source_line.setObjectName("source_line")
        self.source_horizontal_layout.addWidget(self.source_line)
        self.source_button = QPushButton(self.source_group)
        self.source_button.setMinimumSize(QSize(30, 30))
        self.source_button.setText("")
        # icon6 = QIcon()
        # icon6.addPixmap(QPixmap("../icon/load.png"), QIcon.Normal, QIcon.Off)
        # self.source_button.setIcon(icon6)
        self.source_button.setObjectName("source_button")
        self.source_horizontal_layout.addWidget(self.source_button)
        self.source_group_vertical_layout.addLayout(self.source_horizontal_layout)
        self.source_list = QListWidget(self.source_group)
        self.source_list.setObjectName("source_list")
        self.source_group_vertical_layout.addWidget(self.source_list)
        self.source_target_horizontal_layout.addWidget(self.source_group)
        self.target_group = QGroupBox("Target Mesh", self.central_widget)
        self.target_group.setObjectName("target_group")
        self.target_group_vertical_layout = QVBoxLayout(self.target_group)
        self.target_group_vertical_layout.setSpacing(2)
        self.target_group_vertical_layout.setContentsMargins(2, 2, 2, 2)
        self.target_group_vertical_layout.setObjectName("target_group_vertical_layout")
        self.target_horizontal_layout = QHBoxLayout()
        self.target_horizontal_layout.setSpacing(0)
        self.target_horizontal_layout.setObjectName("target_horizontal_layout")
        self.target_line = QLineEdit(self.target_group)
        self.target_line.setMinimumSize(QSize(0, 30))
        self.target_line.setObjectName("target_line")
        self.target_horizontal_layout.addWidget(self.target_line)
        self.target_button = QPushButton(self.target_group)
        self.target_button.setMinimumSize(QSize(30, 30))
        self.target_button.setText("")
        # self.target_button.setIcon(icon6)
        self.target_button.setObjectName("target_button")
        self.target_horizontal_layout.addWidget(self.target_button)
        self.target_group_vertical_layout.addLayout(self.target_horizontal_layout)
        self.target_list = QListWidget(self.target_group)
        self.target_list.setObjectName("target_list")
        self.target_group_vertical_layout.addWidget(self.target_list)
        self.source_target_horizontal_layout.addWidget(self.target_group)
        self.from_to_mesh_vertical_layout.addLayout(self.source_target_horizontal_layout)
        self.central_widget_horizontal_layout.addLayout(self.from_to_mesh_vertical_layout)
        self.convert_cluster_vertical_layout = QVBoxLayout()
        self.convert_cluster_vertical_layout.setSpacing(5)
        self.convert_cluster_vertical_layout.setObjectName("convert_cluster_vertical_layout")
        self.convert_group = QGroupBox("Convert", self.central_widget)
        self.convert_group.setObjectName("convert_group")
        self.convert_group_vertical_layout = QVBoxLayout(self.convert_group)
        self.convert_group_vertical_layout.setSpacing(2)
        self.convert_group_vertical_layout.setContentsMargins(2, 2, 2, 2)
        self.convert_group_vertical_layout.setObjectName("convert_group_vertical_layout")
        self.convert_to_button = QPushButton("Convert To", self.convert_group)
        self.convert_to_button.setMinimumSize(QSize(180, 30))
        # icon7 = QIcon()
        # icon7.addPixmap(QPixmap("../icon/convert_to.png"), QIcon.Normal, QIcon.Off)
        # self.convert_to_button.setIcon(icon7)
        self.convert_to_button.setObjectName("convert_to_button")
        self.convert_group_vertical_layout.addWidget(self.convert_to_button)
        self.copy_to_button = QPushButton("Copy To", self.convert_group)
        self.copy_to_button.setMinimumSize(QSize(180, 30))
        # icon8 = QIcon()
        # icon8.addPixmap(QPixmap("../icon/copy_to.png"), QIcon.Normal, QIcon.Off)
        # self.copy_to_button.setIcon(icon8)
        self.copy_to_button.setObjectName("copy_to_button")
        self.convert_group_vertical_layout.addWidget(self.copy_to_button)
        self.clear_button = QPushButton("Clear", self.convert_group)
        self.clear_button.setMinimumSize(QSize(180, 30))
        # icon9 = QIcon()
        # icon9.addPixmap(QPixmap("../icon/clear.png"), QIcon.Normal, QIcon.Off)
        # self.clear_button.setIcon(icon9)
        self.clear_button.setObjectName("clear_button")
        self.convert_group_vertical_layout.addWidget(self.clear_button)
        self.convert_cluster_vertical_layout.addWidget(self.convert_group)
        self.cluster_group = QGroupBox(self.central_widget)
        self.cluster_group.setObjectName("cluster_group")
        self.cluster_group_vertical_layout = QVBoxLayout(self.cluster_group)
        self.cluster_group_vertical_layout.setSpacing(2)
        self.cluster_group_vertical_layout.setContentsMargins(2, 2, 2, 2)
        self.cluster_group_vertical_layout.setObjectName("cluster_group_vertical_layout")
        self.combine_copy_horizontal_layout = QHBoxLayout()
        self.combine_copy_horizontal_layout.setSpacing(0)
        self.combine_copy_horizontal_layout.setObjectName("combine_copy_horizontal_layout")
        self.combine_button = QPushButton("Combine", self.cluster_group)
        self.combine_button.setMinimumSize(QSize(92, 30))
        # icon10 = QIcon()
        # icon10.addPixmap(QPixmap("../icon/combine.png"), QIcon.Normal, QIcon.Off)
        # self.combine_button.setIcon(icon10)
        self.combine_button.setObjectName("combine_button")
        self.combine_copy_horizontal_layout.addWidget(self.combine_button)
        self.copy_button = QPushButton("Copy", self.cluster_group)
        self.copy_button.setMinimumSize(QSize(92, 30))
        # icon11 = QIcon()
        # icon11.addPixmap(QPixmap("../icon/copy.png"), QIcon.Normal, QIcon.Off)
        # self.copy_button.setIcon(icon11)
        self.copy_button.setObjectName("copy_button")
        self.combine_copy_horizontal_layout.addWidget(self.copy_button)
        self.cluster_group_vertical_layout.addLayout(self.combine_copy_horizontal_layout)
        self.mirror_group = QGroupBox(self.cluster_group)
        self.mirror_group.setTitle("")
        self.mirror_group.setObjectName("mirror_group")
        self.mirror_group_horizontal_layout = QHBoxLayout(self.mirror_group)
        self.mirror_group_horizontal_layout.setContentsMargins(2, 2, 2, 2)
        self.mirror_group_horizontal_layout.setObjectName("mirror_group_horizontal_layout")
        self.x_radio = QRadioButton("X", self.mirror_group)
        self.x_radio.setMinimumSize(QSize(30, 30))
        self.x_radio.setObjectName("x_radio")
        self.x_radio.setChecked(True)
        self.mirror_group_horizontal_layout.addWidget(self.x_radio)
        self.y_radio = QRadioButton("Y", self.mirror_group)
        self.y_radio.setMinimumSize(QSize(30, 30))
        self.y_radio.setObjectName("y_radio")
        self.mirror_group_horizontal_layout.addWidget(self.y_radio)
        self.z_radio = QRadioButton("Z", self.mirror_group)
        self.z_radio.setMinimumSize(QSize(30, 30))
        self.z_radio.setObjectName("z_radio")
        self.mirror_group_horizontal_layout.addWidget(self.z_radio)
        self.mirror_button = QPushButton("Mirror", self.mirror_group)
        self.mirror_button.setMinimumSize(QSize(0, 30))
        # icon12 = QIcon()
        # icon12.addPixmap(QPixmap("../icon/mirror.png"), QIcon.Normal, QIcon.Off)
        # self.mirror_button.setIcon(icon12)
        self.mirror_button.setObjectName("mirror_button")
        self.mirror_group_horizontal_layout.addWidget(self.mirror_button)
        self.cluster_group_vertical_layout.addWidget(self.mirror_group)
        self.import_export_horizontal_layout = QHBoxLayout()
        self.import_export_horizontal_layout.setSpacing(0)
        self.import_export_horizontal_layout.setObjectName("import_export_horizontal_layout")
        self.export_button = QPushButton("Export", self.cluster_group)
        self.export_button.setMinimumSize(QSize(0, 30))
        # icon13 = QIcon()
        # icon13.addPixmap(QPixmap("../icon/export.png"), QIcon.Normal, QIcon.Off)
        # self.export_button.setIcon(icon13)
        self.export_button.setObjectName("export_button")
        self.import_export_horizontal_layout.addWidget(self.export_button)
        self.import_button = QPushButton("Import", self.cluster_group)
        self.import_button.setMinimumSize(QSize(0, 30))
        # icon14 = QIcon()
        # icon14.addPixmap(QPixmap("../icon/import.png"), QIcon.Normal, QIcon.Off)
        # self.import_button.setIcon(icon14)
        self.import_button.setObjectName("import_button")
        self.import_export_horizontal_layout.addWidget(self.import_button)
        self.cluster_group_vertical_layout.addLayout(self.import_export_horizontal_layout)
        self.export_import_list = QListWidget(self.cluster_group)
        self.export_import_list.setObjectName("export_import_list")
        self.cluster_group_vertical_layout.addWidget(self.export_import_list)
        self.convert_cluster_vertical_layout.addWidget(self.cluster_group)
        self.central_widget_horizontal_layout.addLayout(self.convert_cluster_vertical_layout)
        deformer_manager_window.setCentralWidget(self.central_widget)

        # self.retranslateUi(deformer_manager_window)
        QMetaObject.connectSlotsByName(deformer_manager_window)

    def retranslateUi(self, deformer_manager_window):
        self.from_group.setTitle(
            QApplication.translate("deformer_manager_window", "From", None, QApplication.UnicodeUTF8))
        self.soft_radio.setText(QApplication.translate("deformer_manager_window", "Soft Selection", None,
                                                       QApplication.UnicodeUTF8))
        self.blend_radio.setText(QApplication.translate("deformer_manager_window", "Blend Shape", None,
                                                        QApplication.UnicodeUTF8))
        self.wire_radio.setText(
            QApplication.translate("deformer_manager_window", "Wire", None, QApplication.UnicodeUTF8))
        self.lattice_radio.setText(
            QApplication.translate("deformer_manager_window", "Lattice", None, QApplication.UnicodeUTF8))
        self.cluster_radio.setText(
            QApplication.translate("deformer_manager_window", "Cluster", None, QApplication.UnicodeUTF8))
        self.skin_radio.setText(QApplication.translate("deformer_manager_window", "Skin Cluster", None,
                                                       QApplication.UnicodeUTF8))
        self.to_group.setTitle(
            QApplication.translate("deformer_manager_window", "To", None, QApplication.UnicodeUTF8))
        self.to_cluster_radio.setText(
            QApplication.translate("deformer_manager_window", "Cluster", None, QApplication.UnicodeUTF8))
        self.to_skin_radio.setText(QApplication.translate("deformer_manager_window", "Skin Cluster", None,
                                                          QApplication.UnicodeUTF8))
        self.source_group.setTitle(QApplication.translate("deformer_manager_window", "Source Mesh", None,
                                                          QApplication.UnicodeUTF8))
        self.target_group.setTitle(QApplication.translate("deformer_manager_window", "Target Mesh", None,
                                                          QApplication.UnicodeUTF8))
        self.convert_group.setTitle(
            QApplication.translate("deformer_manager_window", "Convert", None, QApplication.UnicodeUTF8))
        self.convert_to_button.setText(
            QApplication.translate("deformer_manager_window", "Convert To", None, QApplication.UnicodeUTF8))
        self.copy_to_button.setText(
            QApplication.translate("deformer_manager_window", "Copy To", None, QApplication.UnicodeUTF8))
        self.clear_button.setText(
            QApplication.translate("deformer_manager_window", "Clear", None, QApplication.UnicodeUTF8))
        self.cluster_group.setTitle(QApplication.translate("deformer_manager_window", "Cluster Options", None,
                                                           QApplication.UnicodeUTF8))
        self.combine_button.setText(
            QApplication.translate("deformer_manager_window", "Combine", None, QApplication.UnicodeUTF8))
        self.copy_button.setText(
            QApplication.translate("deformer_manager_window", "Copy", None, QApplication.UnicodeUTF8))
        self.x_radio.setText(
            QApplication.translate("deformer_manager_window", "X", None, QApplication.UnicodeUTF8))
        self.y_radio.setText(
            QApplication.translate("deformer_manager_window", "Y", None, QApplication.UnicodeUTF8))
        self.z_radio.setText(
            QApplication.translate("deformer_manager_window", "Z", None, QApplication.UnicodeUTF8))
        self.mirror_button.setText(
            QApplication.translate("deformer_manager_window", "Mirror", None, QApplication.UnicodeUTF8))
        self.export_button.setText(
            QApplication.translate("deformer_manager_window", "Export", None, QApplication.UnicodeUTF8))
        self.import_button.setText(
            QApplication.translate("deformer_manager_window", "Import", None, QApplication.UnicodeUTF8))


if __name__ == "__main__":
    import sys

    app = QApplication(sys.argv)
    win = QMainWindow()
    ui = Ui_deformer_manager_window()
    ui.setupUi(win)
    win.show()
    sys.exit(app.exec_())
